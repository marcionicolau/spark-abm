<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" "../DocBook/docbook-5.0/dtd/docbook.dtd">
<article>
	<info>
		<title>SPARK-PL: Installation and User Interface</title>
		<author>
			<personname>Alexey Solovyev</personname>
		</author>
		<abstract>
			<para>
			</para>
		</abstract>
	</info>

	<sect1>
		<title>Installation of SPARK-PL</title>
		<para>
			SPARK is a Java library for developing agent based models
			in Java. SPARK-PL is a special programming language
			which greatly facilitate the model developing process.
			Each SPARK-PL distribution includes a copy of the latest
			SPARK library along with all necessary tools to implement
			and run your own SPARK models.
		</para>
		<para>
			First of all, you need to obtain a copy of SPARK-PL.
			It can be downloaded from the official SPARK site
			at
			<link xlink:href="http://www.pitt.edu/~cirm/spark">
				http://www.pitt.edu/~cirm/spark
			</link>
			in the Download section. There you need to select the latest version of
			a SPARK-PL distribution for your operation system. Also
			you can download a universal distribution which works
			on any platform. This universal distribution does not support
			advanced graphical features of SPARK which are not essential
			for model developing.
		</para>
		<para>  
			You don't need to get anything
			else except Java runtime of version 1.5 or higher. 
			You can test whether you have Java or not by
			visiting the Web page
			<link xlink:href="http://java.com/en/download/help/testvm.xml">
				http://java.com/en/download/help/testvm.xml
			</link>
		</para>
		<para>
			The installation process of SPARK-PL itself is very simple.
			Extract the distribution archive into any folder on your computer
			and you are done. To start SPARK, open
			'SPARK Manager.jar' in Explorer, Finder, or another
			file manager.
		</para>
	</sect1>
	
	<!-- SPARK GUI -->
	<sect1>
		<title>SPARK GUI</title>
		<para>
			Before creating your own model, it is a good idea
			to look at sample models. After running 'SPARK Manager.jar',
			click 'Open project...' in the 'File' menu. Go to the 'samples'
			folder, select any folder there, and open an xml file inside
			the selected folder. Now click the 'Start' button and the SPARK
			user interface will appear with the selected model (here a screenshot
			of Worms model is shown).
			
			<figure>
				<title>SPARK GUI</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "10in"
							fileref="images/WormsGUI.png" />
					</imageobject>
				</mediaobject>
			</figure>
			
			The SPARK user interface consists of several windows. The main window with
			simulation control elements is always shown. Other windows are
			parameters, charts, additional views, model methods, and model data.
			Some types of windows (charts, additional views) can be created directly
			from the user interface. Other windows (parameters, methods, data) only appear if the
			corresponding model has special elements.  
		</para>
		
		<para>
			You can move and resize windows. Closing any window except the main window will hide
			the corresponding window. It can later be shown again by selecting its name in the
			Window menu. Closing the main window will stop the simulation and exit the user
			interface. Positions, sizes, and visibility of all windows are saved automatically when
			the interface is closed. Next time the same model is run, all windows will be restored
			to their saved positions. 
		</para>
		
	<!-- Main Window -->
	<sect2>
		<title>Main Window</title>
		<para>
			
			<figure>
				<title>Main Window</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "6in"
							fileref="images/WormsMainWindow.png" />
					</imageobject>
				</mediaobject>
			</figure>
		</para>
			
		<para>
			The main window contains the following elements: the main menu bar, the simulation control panel,
			a graphical view control panel, a graphical view panel.
		</para>
	</sect2>
		
	<!-- Simulation Control Panel -->
	<sect2>
		<title>Simulation Control Panel</title>
			<figure>
				<title>Simulation Control Panel</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "6in"
							fileref="images/SimulationControlPanel.png" />
					</imageobject>
				</mediaobject>
			</figure>
			
		<para>
			The left most label shows the number of simulation ticks. In SPARK, simulation time
			is measured in simulation steps, ticks. Next is 'Start' button which starts a simulation.
			When this button is clicked, then it will become 'Pause' button which
			can pause an active simulation process.
			The button 'Setup' stops a simulation and reinitializes a loaded model.
			Also it resets all information gathered during the previous
			simulation process. The center slider controls the simulation
			speed. This slider specifies the amount of skipped frames and simulation delays. 
			The right most slider also controls the simulation speed in terms of
			simulation frequency. The precise meaning of the simulation speed and these sliders is
			given below.
		</para>  
			
		<para>
			In SPARK, simulation and visualization processes are parallel. When the simulation speed is at the Normal position,
			then the simulation process runs as fast as possible meanwhile visualization process tries
			to visualize as much as it can. If the simulation process is faster than visualization, then
			some frames will be skipped automatically. If the simulation speed is set to faster values
			(on the left from the Normal position), then several frames will be always skipped (the label Fast
			corresponds to 100 skipped frames). Slower values of the simulation speed affect the simulation process
			by inserting a short delay after each simulation step. The length of this delay is constant.
		</para>
		<para>
			The frequency slider (the right most one) can be only used to slow down the simulation process.
			The purpose of this control is to fix the simulation frequency rate. The labels on the slider
			correspond to desired frequency rates. 0 means that the frequency rate is not fixed. The frequency
			rate is not guaranteed for slow simulations. 
		</para>
	</sect2> 
	
	<!-- Main Menu -->
	<sect2>
		<title>Main Menu</title>
		<!-- File -->
		<sect3>
			<title>File</title>
			<para>
				Open. Opens a SPARK model directly form the SPARK user interface.
				Warning: if you want to open a SPARK model directly from the user interface,
				then do not confuse a SPARK project description file and a SPARK model descriptioin
				file which both have the xml extension. Usually, a SPARK project description file
				is located in the root folder of a SPARK project, meanwhile a SPARK model description
				file is located in project's output folder (which is usually called 'output').
			</para>
			<para>
				Close. Closes a loaded model. Not really useful.
			</para>
			<para>
				Exit. Closes the SPARK user interface. All interface information is
				automatically saved for the currently open model.
			</para>
			<para>
				Below the 'Exit' item, names of recently open models are shown. Choosing one of them
				will close the loaded model and open the selected one.
			</para>
			<para>
				Preferences. Opens the SPARK preferences dialog.
				<figure>
					<title>Preferences Dialog</title>
					<mediaobject>
						<imageobject>
							<imagedata align="left" format="PNG" width = "5in"
								fileref="images/PreferencesDialog.png" />
						</imageobject>
					</mediaobject>
				</figure>
			
				In the first tab, the visualization engine can be selected.
				Note that JOGL can be selected only if you are using a version
				of SPARK specific for your operation system (not a universal version).
			</para>
			<para>
				In the second tab, the number of remembered recently open models can be specified.
			</para>
			<para>
				The third tab specifies a directory where bitmap fonts can be found.
				This is used in JOGL rendering mode and is a subject of another tutorial.
			</para>
		</sect3>
		<!-- Model -->
		<sect3>
			<title>Model</title>
			<para>
				Model properties. Opens the model properties dialog.
				<figure>
					<title>Model Properties Dialog</title>
					<mediaobject>
						<imageobject>
							<imagedata align="left" format="PNG" width = "4in"
								fileref="images/ModelPropertiesDialog.png" />
						</imageobject>
					</mediaobject>
				</figure>
				
				The check box and the next number field set the random generator seed
				for the next simulation. If the check box is not selected, then
				the seed in the number field is used for initializing the random number
				generator for the next simulation. Different simulation processes with
				the same simulation seed will give the same outcome.  
			</para>
			<para>
				Last two parameters (Observer name and Execution mode) are experimental. It is not
				recommended to change them from the default values.
			</para>
			<para>
				Data layer properties. Opens the dialog for setting visualization properties of 
				data layers.
			</para>
			<para>
				Batch run. Opens the dialog for starting a batch run process.
			</para>
		</sect3>
		
		<sect3>
			<title>Window</title>
			<para>
				New View. Creates a new view window.
			</para>
			<para>
				New Chart... Opens a chart creation dialog.
			</para>
			<para>
				Tile Windows. Tiles windows on the screen in a non-overlapping way. 
				Only visible windows are rearranged.
			</para>
			<para>
				Windows... Opens a dialog where a selected window can be killed (removed).
				This dialog could be useful if there is a window without context in the interface.
				Such windows could appear as a result of some model modification, especially
				when a global variable used for a chart is renamed or removed. Note: it is possible to kill
				even Parameters and other system windows. These windows will be recreated next time
				the model is loaded.
			</para>
			<para>
				A list of interface windows. Unchecked windows are invisible.
			</para>
		</sect3>
	</sect2>
	
	<!-- Data Layer parameters dialog -->
	<sect2>
		<title>Data Layer Parameters</title>
		<para>
			<figure>
				<title>Data layers parameters</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "6in"
							fileref="images/WormsDatalayerParameters.png" />
					</imageobject>
				</mediaobject>
			</figure>
			The dialog for changing data layer parameters can be open from the main menu: 
			Model -> Data Layer Properties. This dialog is used for setting visualization properties
			of data layers. It is possible to change two values and colors
			associated with these values. The first value corresponds to
			the minimum value of a data layer and the second value corresponds
			to the maximum value of a data layer. These values can be arbitrary:
			they do not affect the behavior of data layers and only used for their visualization.
			If you want to get exact current minimum and maximum values for a data layer,
			then click 'Normalize' button.
		</para>
		<para>
			The button 'Colors' opens a new dialog for adding more colors for visualization of a data layer.
			<figure>
				<title>Data layers parameters</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "3in"
							fileref="images/WormsAdditionalDataLayerColors.png" />
					</imageobject>
				</mediaobject>
			</figure>
			The button 'Add' creates a new element for a color. Each element has two properties:
			a value (in percents) and a color. The button 'Remove' removes the corresponding element.
		</para>
	</sect2>

	<!-- Batch Run -->
	<sect2>
		<title>Batch Run Dialog</title>
			<para>
				Sometime it is required to run a model several times and save the
				results after each run. To simplify this procedure, you can use
				batch run features of SPARK. Go to 'Model' menu and click 'Batch run'.
				
				<figure>
					<title>Batchrun Dialog</title>
					<mediaobject>
						<imageobject>
							<imagedata align="left" format="PNG" width = "4in"
								fileref="images/BatchrunDialog.png" />
							</imageobject>
					</mediaobject>
				</figure>
				
				The first line in the batch run dialog is the number of steps (ticks)
				in each run. The second line is the number of repetitions of each run.
				The third line specifies the prefix of output file names. The fourth line
				specifies how often data is sampled. The default value is 1, so data for
				all ticks is saved by default.
			</para>
			<para>
				The next flags control what kind of output is saved. If the 'Save data' flag is on,
				then the simulation data is saved in comma separated (csv) files. The 'Save final snapshots'
				flag indicates whether the final snapshot for all views will be saved or not.
				If the 'Save snapshot' flag is activated, then snapshots will be saved for all views
				at time points controlled by the 'Snapshot interval' parameter.
			</para>
			<para> 
				All batch run data is saved in the project output folder. Each batch run will create
				a unique folder inside the output folder with the name corresponding to the
				time when the batch run process has been started. The output data file names have the
				following structure: [prefix][number of run]-[number of repetition].csv. One run
				corresponds to a model run with some fixed values of parameters. Different runs
				correspond to different values of parameters. Each output data file contains all
				values of parameters for the corresponding run and collected data.
			</para>
			<para>
				All snapshots are saved as png files. The names of these png files have the following
				structure: [number of run]-[number of repetition]-[view name]-[tick number].png.
			</para>
			<para>
				The middle section of the batch run dialog is used for setting parameters
				during batch runs. If a parameter is checked, then its value will be
				changed from 'Start' to 'End' with the given 'Step'. If several parameters
				are checked, then all possible values for all checked parameters are tried.
				If a parameter is not selected, then its current value is used during
				a batch run process.
			</para>
			<para>
				Note: due to round-off errors, it is preferrable to make the 'End' value a
				little higher than a required value. For example, if you want to change
				some parameter from 1 to 2 with step 0.1, then it is better to set the end value
				2.01.
			</para>
			<para>
				The last section of the batch run dialog can be used to set up automatic data
				analysis process. Data analysis feature is not fully implemented in SPARK yet, so
				all parameters in this section must be ignored now.
			</para>
	</sect2>
	
	<!-- New Chart -->
	<sect2>
		<title>New Chart Dialog</title>
		<para>
			Charts can be created in the New Chart dialog (Window -> New Chart).
			<figure>
				<title>Batchrun Dialog</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "6in"
							fileref="images/NewChartDialog.png" />
						</imageobject>
				</mediaobject>
			</figure>
		</para>
	</sect2>

	<!-- Parameters -->
	<sect2>
		<title>Parameters window</title>
		<para>
			<figure>
				<title>Parameters window</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width="5in"
							fileref="images/WormsParameters.png" />
					</imageobject>
				</mediaobject>
			</figure>
			It contains all parameters of the running model.
			Parameters are model variables that can be changed
			during a simulation process. You can change them before
			starting a simulation or when a simulation runs in real time.
			Some parameters represented by sliders (numerical parameters).
			Other parameters represented by check boxes (boolean parameters).
		</para>
		<para>
			Each numerical parameter is characterized by 3 options: its minimal and maximal values,
			and its step size. There are two ways to set these options. One way is to do
			it inside the model code using attributes (see the corresponding tutorial).
			Another way is to edit parameter options inside the user interface. The 'Edit'
			button opens a dialog for changing parameter options. Three options for
			each parameter can be edited. To make activate changes, it is required to select
			the check box at the 'Overwrite default' column. Default options are options
			defined in the model code.
		</para>
		<para>
			The upper section of the Parameters window contains controls for saving and
			loading values of parameters. The button 'New' creates a new named set of parameter values.
			When a new set is created, it can be selected in the combo box. To save the current
			values of parameters it is required to select any valid set of values (not 'none')
			and click the 'Save' button. If the 'Auto save' check box is activated, then
			the current values of parameters will be saved in the selected set
			when the SPARK user interface is closed (or when the model is closed).
		</para>
	</sect2>
		
	<sect2>
		<title>Chart windows</title>
		<para>
			There could be several chart windows in a model.
				
			<figure>
				<title>A chart</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "3in"
							fileref="images/WormsChart.png" />
					</imageobject>
				</mediaobject>
			</figure>
				
				
				Each chart window shows a plot of some model variable.
				If you click the 'Clear' button, then
				the plot area will be cleared. If you click the 'Save'
				button, then you can select a file in which to save
				the numerical data of a plot.
			</para>
		</sect2>
		
		
		<sect2>
			<title>View windows</title>
			<para>
			
			<figure>
				<title>A view window</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "4in"
							fileref="images/WormsView.png" />
					</imageobject>
				</mediaobject>
			</figure>
			
			</para>
			<para>
				These windows give the additional visualizations
				of the running simulation. You can customize each view
				window and the main window view by right clicking on them
				and selecting 'Properties' from the pop-up menu. Also
				you can remove any additional view window by selecting
				'Remove view' from the same pop-up menu. 'Properties' opens
				a visualization properties dialog.
				
			<figure>
				<title>Visualization Properties dialog</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "4in"
							fileref="images/WormsRenderParameters.png" />
					</imageobject>
				</mediaobject>
			</figure>

				
				Here you can set visualization properties of agents: they
				can be transparent, visible/invisible, with or without borders.
				Also you specify the order in which agents will be visualized.
				Agents on the top of the list are drawn atop of other agents.
				In the 'Spaces' section you can select which space is visualized
				in the given window. In the 'Data Layers' section you can select
				a data layer to be visualized.
			</para>
		</sect2>
	

		<sect2>
			<title>Dataset window</title>
			<para>
				It is possible to save the data collected during the simulation. Just
				click the Save button in the Dataset window.
				
				<figure>
				<title>Dataset window</title>
				<mediaobject>
					<imageobject>
						<imagedata align="left" format="PNG" width = "2in"
							fileref="images/WormsDataset.png" />
					</imageobject>
				</mediaobject>
				</figure>
				
				The standard dialog will appear where you can specify the name of a 
				data file. All data will be saved as a plain text CSV file which can be
				easily opened in Microsoft Excel. Note that the saved data
				will also contain the current values of all parameters.			
			</para>
		</sect2>
	</sect1>
 
</article>
